## Root logger option ##

#Na primeira linha, estamos indicando o nível mínimo de logging (registro) e
# os appenders que vamos usar. Nesse caso, usaremos um nível de logging definido
# como DEBUG e criaremos dois appenders, stdout e file.
log4j.rootLogger=DEBUG, stdout, file

#A segunda linha é usada para configurar em que nível os avisos começarão
# a ser exibidos pelo console e armazenados no arquivo.
log4j.logger.infoLogger=DEBUG

#E, com a terceira linha, evitamos que os appenders herdem a configuração de
# seus appenders pais, se houver algum (no nosso, seria o appender principal,
# então não temos esse problema).
log4j.additivity.infoLogger=false

## Direct log messages to stdout ##

#Na primeira linha indicamos que tipo de logger será, referindo-se à classe
# que irá imprimir as mensagens (Lembre-se da seção Appenders!).
log4j.appender.stdout=org.apache.log4j.ConsoleAppender

#Na segunda linha, dizemos que queremos imprimí-lo diretamente do console.
log4j.appender.stdout.Target=System.out

#E as duas últimas linhas são para configurar o template que cada
# mensagem terá. Você pode ver todas as opções de configuração possíveis
# na página de ajuda do Apache log4J
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

## Configurar appender ##
#Nessas linhas, vamos fazer exatamente o mesmo que antes, mas configurando
#o appender para a saída por meio de um arquivo.

#Na primeira linha configuramos a classe como RollingFileAppender, o que
#significa que diferentes arquivos serão criados quando certas condições
#com as quais lidaremos nas linhas a seguir forem atendidas.
log4j.appender.file=org.apache.log4j.RollingFileAppender

#Na próxima linha, indicamos o nome (com o caminho/rota incluído) que
#queremos que nosso arquivo de log tenha.
log4j.appender.file.File=avisos.log

#Com MaxFileSize estabelecemos o tamanho máximo que nosso arquivo terá,
#e com MaxBackupIndex indicamos quantos arquivos podemos ter usando o
#mesmo log. Ao atingir o máximo, eles começarão a ser sobrescritos começando
#pelos mais antigos.
log4j.appender.file.MaxFileSize=5MB

#E, finalmente, como no console, indicamos qual modelo (template) nossas mensagens terão.
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] [ %-5p] [%c{1}:%L] %m%n